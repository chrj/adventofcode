package main

import (
	"strings"
	"testing"
)

func TestEvolve(t *testing.T) {

	plants := NewPlants()
	plants.SetState("#..#.#..##......###...###")
	plants.SetReactions([]string{
		"...## => #",
		"..#.. => #",
		".#... => #",
		".#.#. => #",
		".#.## => #",
		".##.. => #",
		".#### => #",
		"#.#.# => #",
		"#.### => #",
		"##.#. => #",
		"##.## => #",
		"###.. => #",
		"###.# => #",
		"####. => #",
	})

	generations := []string{
		"...#..#.#..##......###...###...........",
		"...#...#....#.....#..#..#..#...........",
		"...##..##...##....#..#..#..##..........",
		"..#.#...#..#.#....#..#..#...#..........",
		"...#.#..#...#.#...#..#..##..##.........",
		"....#...##...#.#..#..#...#...#.........",
		"....##.#.#....#...#..##..##..##........",
		"...#..###.#...##..#...#...#...#........",
		"...#....##.#.#.#..##..##..##..##.......",
		"...##..#..#####....#...#...#...#.......",
		"..#.#..#...#.##....##..##..##..##......",
		"...#...##...#.#...#.#...#...#...#......",
		"...##.#.#....#.#...#.#..##..##..##.....",
		"..#..###.#....#.#...#....#...#...#.....",
		"..#....##.#....#.#..##...##..##..##....",
		"..##..#..#.#....#....#..#.#...#...#....",
		".#.#..#...#.#...##...#...#.#..##..##...",
		"..#...##...#.#.#.#...##...#....#...#...",
		"..##.#.#....#####.#.#.#...##...##..##..",
		".#..###.#..#.#.#######.#.#.#..#.#...#..",
		".#....##....#####...#######....#.#..##.",
	}

	for i, generation := range generations {

		computed := strings.Trim(plants.String(), ".")
		expected := strings.Trim(generation, ".")

		if computed != expected {
			t.Errorf("in generation %v\nexpected: %s\n     got: %v\n", i, expected, computed)
		}

		if i < 20 {
			plants.React()
		}
	}

	sum := plants.Sum()
	if sum != 325 {
		t.Errorf("expected sum to be: %v, got: %v", 325, sum)
	}

}
